---

const dayPages = await Astro.glob('../pages/day-*.astro')
dayPages.sort((a, b) => {
    const aNum = parseInt(a.url?.split('-')[1]!)
    const bNum = parseInt(b.url?.split('-')[1]!)
    return aNum - bNum
})

const currentRoute = Astro.url.pathname
---
<html lang="en">
    <head>
        <title>A Year of Creation</title>
        <meta charset="UTF-8">
        <meta name="viewport" content="width=device-width, initial-scale=1.0">
        <link rel="stylesheet" type="text/css" href="//fonts.googleapis.com/css?family=Pacifico" />
    </head>
    <body class="h-screen w-screen overflow-hidden bg-neutral-content" data-theme="retro">
        <div id="texture-overlay">
            <svg xmlns="http://www.w3.org/2000/svg"  class="h-full w-full">
                <rect width="100%" height="100%" filter="url(#noise)" />
                <defs>
                    <filter id="noise" x="0" y="0" width="100%" height="100%">
                        <feTurbulence baseFrequency=".5" result="turbulence" />
                    </filter>
                </defs>
            </svg>
        </div>

        <slot />
        <div class="absolute bottom-0 left-0 w-full bg-base-300/20 p-4 gap-2 flex justify-center">
            <a href="/" class={currentRoute === '/' ? 'btn btn-secondary' : 'btn btn-base-300' }>
                Home
            </a>
            {dayPages.map((page) => (
                <a href={page.url} class={currentRoute === page.url ? 'btn btn-secondary' : 'btn btn-base-300' }>
                    {page.url?.split('-')[1] }
                </a>
            ))}
        </div>
    </body>
</html>

<style>
#texture-overlay {
    position: absolute;
    top: 0;
    left: 0;
    width: 100vw;
    height: 100vh;
    pointer-events: none;
    z-index: 999;

    /* content: '';
    background: url('../assets/noise_filter.svg'); */
    opacity: 0.3; /* Adjust opacity as needed */
}
</style>
